# ============================================================================
# üõ°Ô∏è NETWORK POLICIES - CONEX√ÉO DE SORTE SECURITY INFRASTRUCTURE
# ============================================================================
# Pol√≠ticas de rede para isolamento e seguran√ßa entre microsservi√ßos
# seguindo padr√£o: conexao-de-sorte-backend-{nome}
# ============================================================================

# ========================================
# üö´ DENY ALL - POL√çTICA PADR√ÉO
# ========================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: conexao-de-sorte-deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# ========================================
# üîê AUTENTICA√á√ÉO - NETWORK POLICY
# ========================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: conexao-de-sorte-backend-autenticacao-netpol
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: conexao-de-sorte-backend-autenticacao
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Permitir tr√°fego do Gateway
  - from:
    - podSelector:
        matchLabels:
          app: conexao-de-sorte-backend-gateway
    ports:
    - protocol: TCP
      port: 8081
  # Permitir tr√°fego do Istio Ingress Gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8081
  # Permitir health checks
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 8081
  egress:
  # Permitir acesso ao MySQL
  - to:
    - podSelector:
        matchLabels:
          app: conexao-mysql
    ports:
    - protocol: TCP
      port: 3306
  # Permitir acesso ao Redis
  - to:
    - podSelector:
        matchLabels:
          app: conexao-redis
    ports:
    - protocol: TCP
      port: 6379
  # Permitir DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
  # Permitir HTTPS externo (Azure Key Vault)
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# ========================================
# üí∞ FINANCEIRO - NETWORK POLICY
# ========================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: conexao-de-sorte-backend-financeiro-netpol
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: conexao-de-sorte-backend-financeiro
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Apenas Gateway e Autentica√ß√£o podem acessar
  - from:
    - podSelector:
        matchLabels:
          app: conexao-de-sorte-backend-gateway
    - podSelector:
        matchLabels:
          app: conexao-de-sorte-backend-autenticacao
    ports:
    - protocol: TCP
      port: 8082
  egress:
  # Acesso restrito apenas aos recursos necess√°rios
  - to:
    - podSelector:
        matchLabels:
          app: conexao-mysql
    ports:
    - protocol: TCP
      port: 3306
  - to:
    - podSelector:
        matchLabels:
          app: conexao-redis
    ports:
    - protocol: TCP
      port: 6379
  # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
  # HTTPS externo para APIs banc√°rias
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# ========================================
# üí¨ BATE-PAPO - NETWORK POLICY
# ========================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: conexao-de-sorte-backend-batepapo-netpol
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: conexao-de-sorte-backend-batepapo
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Permitir tr√°fego do Gateway e outros microsservi√ßos
  - from:
    - podSelector:
        matchLabels:
          app: conexao-de-sorte-backend-gateway
    - podSelector:
        matchLabels:
          app: conexao-de-sorte-backend-notificacoes
    ports:
    - protocol: TCP
      port: 8083
  egress:
  # Acesso aos recursos de dados
  - to:
    - podSelector:
        matchLabels:
          app: conexao-mysql
    ports:
    - protocol: TCP
      port: 3306
  - to:
    - podSelector:
        matchLabels:
          app: conexao-redis
    ports:
    - protocol: TCP
      port: 6379
  # Comunica√ß√£o com Notifica√ß√µes
  - to:
    - podSelector:
        matchLabels:
          app: conexao-de-sorte-backend-notificacoes
    ports:
    - protocol: TCP
      port: 8084
  # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53

---
# ========================================
# üåê GATEWAY - NETWORK POLICY
# ========================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: conexao-de-sorte-backend-gateway-netpol
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: conexao-de-sorte-backend-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Permitir tr√°fego externo via Istio Ingress Gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8086
  # Permitir health checks
  - from: []
    ports:
    - protocol: TCP
      port: 8081
  egress:
  # Permitir comunica√ß√£o com todos os microsservi√ßos
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: conexao-de-sorte
    ports:
    - protocol: TCP
      port: 8081
    - protocol: TCP
      port: 8082
    - protocol: TCP
      port: 8083
    - protocol: TCP
      port: 8084
    - protocol: TCP
      port: 8085
    - protocol: TCP
      port: 8087
    - protocol: TCP
      port: 8088
    - protocol: TCP
      port: 8089
    - protocol: TCP
      port: 8090
    - protocol: TCP
      port: 8091
  # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53

---
# ========================================
# üìä OBSERVABILIDADE - NETWORK POLICY
# ========================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: conexao-de-sorte-backend-observabilidade-netpol
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: conexao-de-sorte-backend-observabilidade
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Permitir coleta de m√©tricas de todos os pods
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: conexao-de-sorte
    ports:
    - protocol: TCP
      port: 8090
  # Permitir acesso do Prometheus
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 8090
  egress:
  # Permitir coleta de m√©tricas de todos os microsservi√ßos
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: conexao-de-sorte
    ports:
    - protocol: TCP
      port: 8081  # Management port padr√£o
  # Acesso ao banco para m√©tricas
  - to:
    - podSelector:
        matchLabels:
          app: conexao-mysql
    ports:
    - protocol: TCP
      port: 3306
  # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
